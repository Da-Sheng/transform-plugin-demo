body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 20px;
  background-color: #f5f5f5;
}

h1 {
  color: #333;
  text-align: center;
}

p {
  text-align: center;
  margin-bottom: 30px;
}

.container {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  margin-bottom: 30px;
}

.box {
  width: 200px;
  height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
  margin: 10px;
  border-radius: 5px;
  transition: transform 0.3s ease;
}

.normal {
  background-color: #3498db;
  /* 2D变换，将被插件转换为3D */
  transform: translateX(0) scale(1) rotate(0deg);
}

.accelerated {
  background-color: #2ecc71;
  /* 已经是3D变换，不会被修改 */
  transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(0, 0, 1, 0deg);
}

.no-transform {
  background-color: #e74c3c;
  /* 由于选择器被排除，这个2D变换不会被转换为3D */
  transform: translateX(0) scale(1) rotate(0deg);
}

/* 测试 CSS 函数支持 */
.calc-test {
  background-color: #9b59b6;
  /* 使用 calc() 和 var() 的 2D 变换 */
  transform: translateX(calc(10px + 5%)) scale(var(--scale, 1)) rotate(calc(45deg));
  --scale: 1.2;
}

/* 测试浏览器前缀支持 */
.prefix-test {
  background-color: #f39c12;
  /* 带前缀的 2D 变换 */
  -webkit-transform: translateX(20px) scale(1.1);
  -moz-transform: translateX(20px) scale(1.1);
  -ms-transform: translateX(20px) scale(1.1);
  transform: translateX(20px) scale(1.1);
}

/* 测试复合变换 */
.complex-test {
  background-color: #1abc9c;
  /* 复杂的复合 2D 变换 */
  transform: translateX(10px) translateY(5px) scale(1.2, 0.9) rotate(30deg) matrix(1, 0.5, -0.5, 1, 10, 10);
}

/* 测试智能 will-change */
.smart-will-change {
  background-color: #34495e;
  /* 有过渡的 2D 变换，应该添加 will-change */
  transform: translateX(0);
  transition: transform 0.3s ease;
}

.no-animation {
  background-color: #7f8c8d;
  /* 无过渡的 2D 变换，在 smartWillChange 为 true 时不应添加 will-change */
  transform: translateX(10px);
}

.controls {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-bottom: 20px;
}

button {
  padding: 10px 20px;
  background-color: #9b59b6;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

button:hover {
  background-color: #8e44ad;
}

#fps-meter {
  position: fixed;
  top: 10px;
  right: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 5px 10px;
  border-radius: 3px;
  font-family: monospace;
}

/* 动画类 */
.animate-normal {
  animation: move 2s infinite alternate;
}

.animate-accelerated {
  animation: move3d 2s infinite alternate;
}

.animate-no-transform {
  animation: move 2s infinite alternate;
}

.animate-calc-test {
  animation: move-calc 2s infinite alternate;
}

.animate-prefix-test {
  animation: move 2s infinite alternate;
}

.animate-complex-test {
  animation: move-complex 2s infinite alternate;
}

.animate-smart-will-change {
  animation: move 2s infinite alternate;
}

.animate-no-animation {
  animation: move 2s infinite alternate;
}

@keyframes move {
  0% {
    transform: translateX(0) scale(1) rotate(0deg);
  }
  50% {
    transform: translateX(50px) scale(1.2) rotate(180deg);
  }
  100% {
    transform: translateX(0) scale(1) rotate(360deg);
  }
}

@keyframes move3d {
  0% {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(0, 0, 1, 0deg);
  }
  50% {
    transform: translate3d(50px, 0, 0) scale3d(1.2, 1.2, 1) rotate3d(0, 0, 1, 180deg);
  }
  100% {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(0, 0, 1, 360deg);
  }
}

@keyframes move-calc {
  0% {
    transform: translateX(calc(0px)) scale(var(--scale)) rotate(0deg);
  }
  50% {
    transform: translateX(calc(25px + 5%)) scale(calc(var(--scale) * 1.2)) rotate(180deg);
  }
  100% {
    transform: translateX(calc(0px)) scale(var(--scale)) rotate(360deg);
  }
}

@keyframes move-complex {
  0% {
    transform: translateX(0) translateY(0) scale(1) rotate(0deg) matrix(1, 0, 0, 1, 0, 0);
  }
  50% {
    transform: translateX(30px) translateY(15px) scale(1.3, 0.8) rotate(180deg) matrix(1, 0.3, -0.3, 1, 20, 10);
  }
  100% {
    transform: translateX(0) translateY(0) scale(1) rotate(360deg) matrix(1, 0, 0, 1, 0, 0);
  }
}

/* 测试浏览器前缀关键帧 */
@-webkit-keyframes move {
  0% {
    -webkit-transform: translateX(0) scale(1) rotate(0deg);
  }
  50% {
    -webkit-transform: translateX(50px) scale(1.2) rotate(180deg);
  }
  100% {
    -webkit-transform: translateX(0) scale(1) rotate(360deg);
  }
}

/* 测试边界情况 */
.edge-case {
  /* 带注释的变换 */
  transform: translateX(10px) /* 这是X轴平移 */ scale(1.1) /* 这是缩放 */;
}

/* 测试性能对比 */
.performance-test {
  width: 10px;
  height: 10px;
  position: absolute;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
}

.performance-2d {
  transform: translateX(0) translateY(0);
}

.performance-3d {
  transform: translate3d(0, 0, 0);
} 